WEBVTT

00:00.350 --> 00:05.250
Hi. In this video, I'm going to give you a quick overview of what you can do with the YouTube APIs.

00:06.750 --> 00:08.700
First of all, we all know what YouTube is, right?

00:08.900 --> 00:12.150
Millions of videos uploaded from all around the world at your fingertips.

00:13.600 --> 00:16.550
The YouTube APIs allow you to integrate YouTube into your application.

00:17.500 --> 00:18.900
There are two main APIs:...

00:19.050 --> 00:21.300
...the data API and the player APIs.

00:21.950 --> 00:25.750
The data API is a RESTful API that allows you to do a wide breadth of operations:...

00:26.200 --> 00:31.150
...searching, pulling back user information, uploading videos, creating playlists, and much more.

00:31.550 --> 00:36.200
I'll go over the two most popular use cases, "search" and "upload", and show you some examples.

00:37.750 --> 00:38.750
First up, search.

00:38.900 --> 00:41.750
I'm sure you've all searched for your favorite video on YouTube.com.

00:42.250 --> 00:45.400
Using the API, you can send a query for a search term like you would on the site,...

00:45.950 --> 00:47.650
...and retrieve a feed of results in XML,...

00:47.700 --> 00:49.950
...which you could then display in your application how you want.

00:50.350 --> 00:51.750
Another big operation is upload.

00:52.050 --> 00:55.300
Your users can upload their videos to YouTube through your application.

00:56.650 --> 00:59.500
For example, animoto.com is a slideshow creation site.

01:00.300 --> 01:03.650
Once their users create a slideshow, they have an option to export to YouTube.

01:04.200 --> 01:06.650
They use the API to authorize the user to the YouTube account,...

01:06.750 --> 01:07.900
...and then send the video over.

01:13.500 --> 01:16.750
You can get started with the data API with one of our open source client libraries.

01:17.150 --> 01:20.400
We have them for PHP, Java, .NET, and Python.

01:20.900 --> 01:23.700
They make parsing feeds and handling authentication much easier.

01:24.200 --> 01:26.800
I should also point out that, while we don't have a JavaScript client library,...

01:26.900 --> 01:29.400
...we do offer JSON as an alternative format to XML...

01:29.600 --> 01:31.600
...so you can easily parse responses with JavaScript.

01:32.900 --> 01:34.250
Now, on to the player APIs.

01:34.600 --> 01:37.350
The player APIs give you control over the YouTube - embedded player.

01:38.150 --> 01:40.800
You can issue commands like "stop", "pause", and "play";...

01:41.450 --> 01:43.500
...listen for events, like air events...

01:43.600 --> 01:46.400
...or which state the player is in, and poll status,...

01:46.500 --> 01:48.400
...like how far into the video the user is.

01:48.800 --> 01:52.800
Here's an example of an application that's using the player APIs to sync up this lecture with the slides.

01:56.750 --> 01:59.600
If you wanna do even deeper customizations, use our chromeless player.

01:59.700 --> 02:03.100
It's just a video box with no buttons that you can control with the player APIs.

02:03.700 --> 02:08.050
You can skin the player to match the look and feel of your application, much like in these examples.

02:13.200 --> 02:15.550
For even more examples, check out our app gallery.

02:16.000 --> 02:18.250
And once you've built something, show us by submitting yours.

02:19.250 --> 02:20.450
This has only been a quick overview,...

02:20.550 --> 02:23.600
...but find all the rest of the details on code.google.com,...

02:23.950 --> 02:25.350
...and ask your questions in our forum.

